$date
	Thu Sep  4 20:49:24 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_nibbleswapper $end
$var wire 8 ! out [7:0] $end
$var reg 1 " clk $end
$var reg 8 # in [7:0] $end
$var reg 1 $ reset $end
$var reg 1 % swap_en $end
$scope function expected_swap $end
$var reg 8 & x [7:0] $end
$upscope $end
$scope module dut $end
$var wire 1 " clk $end
$var wire 8 ' in [7:0] $end
$var wire 1 $ reset $end
$var wire 1 % swap_en $end
$var reg 8 ( out [7:0] $end
$upscope $end
$scope task apply_swap $end
$var reg 1 ) enable $end
$var reg 8 * expected [7:0] $end
$var reg 8 + val [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
x)
bx (
b0 '
bx &
0%
1$
b0 #
0"
bx !
$end
#5
b0 !
b0 (
1"
#10
0"
#12
1%
b1110001 #
b1110001 '
b10111 *
1)
b1110001 +
0$
#15
b10111 !
b10111 (
1"
#16
0%
b10100101 #
b10100101 '
0)
b10100101 +
#20
0"
#25
1"
#26
1%
b10110100 #
b10110100 '
b1001011 *
1)
b10110100 +
#30
0"
#35
b1001011 !
b1001011 (
1"
#36
b11000011 #
b11000011 '
b111100 *
b11000011 +
#40
0"
#45
b111100 !
b111100 (
1"
#46
0%
b11110000 #
b11110000 '
0)
b11110000 +
#50
0"
#55
1"
#56
1%
b1111 *
1)
#60
0"
#65
b1111 !
b1111 (
1"
#66
b10001 #
b10001 '
b10001 *
b10001 +
#70
0"
#75
b10001 !
b10001 (
1"
#76
b100010 #
b100010 '
b100010 *
b100010 +
#80
0"
#85
b100010 !
b100010 (
1"
#86
b111100 #
b111100 '
b11000011 *
b111100 +
#90
0"
#95
b11000011 !
b11000011 (
1"
#100
0"
#105
1"
#106
b0 #
b0 '
b0 *
b0 +
#110
0"
#115
b0 !
b0 (
1"
#116
b11111111 #
b11111111 '
b11111111 *
b11111111 +
#120
0"
#125
b11111111 !
b11111111 (
1"
#126
0%
b10011010 #
b10011010 '
#130
0"
#135
1"
#136
1%
b10100101 #
b10100101 '
b1011010 *
b10100101 &
b10100101 +
#140
0"
#145
b1011010 !
b1011010 (
1"
#146
b1011010 #
b1011010 '
b10100101 *
b1011010 &
b1011010 +
#150
0"
#155
b10100101 !
b10100101 (
1"
#156
b1111 #
b1111 '
b11110000 *
b1111 &
b1111 +
#160
0"
#165
b11110000 !
b11110000 (
1"
#166
b11110000 #
b11110000 '
b1111 *
b11110000 &
b11110000 +
#170
0"
#175
b1111 !
b1111 (
1"
#176
b10101010 #
b10101010 '
b10101010 *
b10101010 &
b10101010 +
#180
0"
#185
b10101010 !
b10101010 (
1"
#186
b1010101 #
b1010101 '
b1010101 *
b1010101 &
b1010101 +
#190
0"
#195
b1010101 !
b1010101 (
1"
#196
b11000000 #
b11000000 '
b1100 *
b11000000 &
b11000000 +
#200
0"
#205
b1100 !
b1100 (
1"
#206
b11 #
b11 '
b110000 *
b11 &
b11 +
#210
0"
#215
b110000 !
b110000 (
1"
#216
b10000 #
b10000 '
b1 *
b10000 &
b10000 +
#220
0"
#225
b1 !
b1 (
1"
#226
b1 #
b1 '
b10000 *
b1 &
b1 +
#230
0"
#235
b10000 !
b10000 (
1"
#236
